{"version":3,"file":"static/js/13.b4b398f4.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from \"react\";\n\nconst Dashboard = React.lazy(() => import(\"./views/dashboard/Dashboard\"));\nconst Vehicle = React.lazy(() => import(\"./views/pages/BO/Vehicle\"));\nconst ListEmployee = React.lazy(() => import(\"./views/pages/BO/ListEmployee\"));\nconst MCP = React.lazy(() => import(\"./views/pages/BO/Mcp\"));\nconst Calendar = React.lazy(() => import(\"./views/calendar/Calendar\"));\nconst Home = React.lazy(() => import(\"./views/home/StartPage\"));\nconst Chat = React.lazy(() => import(\"./views/chat/Chat\"));\n\nconst routes = [\n  { path: \"/home\", exact: true, name: \"\", element: Home },\n  { path: \"/workcalendar\", name: \"Trang chủ\", element: Dashboard },\n  { path: \"/vehicle\", name: \"Thông tin phương tiện\", element: Vehicle },\n  { path: \"/mcp\", name: \"Thông tin MCPs\", element: MCP },\n  { path: \"/calendar\", name: \"Lịch trình\", element: Calendar },\n  { path: \"/Info\", name: \"Thông tin nhân viên\", element: ListEmployee },\n  { path: \"/chat\", name: \"Trò chuyện\", element: Chat },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport routes from \"../routes\";\n\nimport { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname;\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname);\n    return currentRoute ? currentRoute.name : false;\n  };\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = [];\n    location.split(\"/\").reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`;\n      const routeName = getRouteName(currentPathname, routes);\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        });\n      return currentPathname;\n    });\n    return breadcrumbs;\n  };\n\n  const breadcrumbs = getBreadcrumbs(currentLocation);\n  const navigate = useNavigate();\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem onClick={() => navigate(\"/home\")}>Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active\n              ? { active: true }\n              : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        );\n      })}\n    </CBreadcrumb>\n  );\n};\n\nexport default React.memo(AppBreadcrumb);\n","import React, { Suspense } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from \"react\";\nimport { CFooter } from \"@coreui/react\";\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          UWC 2.0\n        </a>\n        <span className=\"ms-1\">&copy; 2022 Doan-Hoi.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a\n          href=\"https://coreui.io/react\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          UWC Admin\n        </a>\n      </div>\n    </CFooter>\n  );\n};\n\nexport default React.memo(AppFooter);\n","import React from \"react\";\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from \"@coreui/react\";\nimport {\n  cilBell,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport avatar8 from \"./../../assets/images/avatars/1.jpg\";\n\nconst AppHeaderDropdown = () => {\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">\n          Tài khoản\n        </CDropdownHeader>\n        <CDropdownItem>\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Thông báo\n          <CBadge color=\"info\" className=\"ms-2\">\n            10\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Tin nhắn\n          <CBadge color=\"success\" className=\"ms-2\">\n            10\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Nhiệm vụ\n          <CBadge color=\"danger\" className=\"ms-2\">\n            10\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Bình luận\n          <CBadge color=\"warning\" className=\"ms-2\">\n            10\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">\n          Cài đặt\n        </CDropdownHeader>\n        <CDropdownItem>\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Thông tin\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Cài đặt\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem href=\"#/login\">\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Đăng xuất\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  );\n};\n\nexport default AppHeaderDropdown;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  CContainer,\n  CHeader,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilMenu } from \"@coreui/icons\";\n\nimport { AppBreadcrumb } from \"./index\";\nimport { AppHeaderDropdown } from \"./header/index\";\n\nconst AppHeader = () => {\n  const dispatch = useDispatch();\n  const sidebarShow = useSelector((state) => state.sidebarShow);\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid className=\"d-flex flex-row justify-content-between\">\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: \"set\", sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from \"react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  cilCalendar,\n  cilTruck,\n  cilPeople,\n  cilCart,\n  cilInfo,\n  cilMap,\n  cilChatBubble,\n} from \"@coreui/icons\";\nimport { CNavGroup, CNavItem, CNavTitle } from \"@coreui/react\";\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: \"Trang chủ\",\n    to: \"/workcalendar\",\n    icon: <CIcon icon={cilMap} customClassName=\"nav-icon\" />,\n    badge: {\n      color: \"info\",\n      text: \"NEW\",\n    },\n  },\n  {\n    component: CNavTitle,\n    name: \"Quản lý\",\n  },\n  {\n    component: CNavItem,\n    name: \"Lịch trình\",\n    to: \"/calendar\",\n    icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavGroup,\n    name: \"Quản lý thông tin\",\n    to: \"/buttons\",\n    icon: <CIcon icon={cilInfo} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: \"Thông tin nhân viên\",\n        to: \"/Info\",\n        icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: \"Thông tin phương tiện\",\n        to: \"/vehicle\",\n        icon: <CIcon icon={cilTruck} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: \"Thông tin MCPs\",\n        to: \"/mcp\",\n        icon: <CIcon icon={cilCart} customClassName=\"nav-icon\" />,\n      },\n    ],\n  },\n  {\n    component: CNavItem,\n    name: \"Trò chuyện\",\n    to: \"/chat\",\n    icon: <CIcon icon={cilChatBubble} customClassName=\"nav-icon\" />,\n  },\n];\n\nexport default _nav;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WebFont from \"webfontloader\";\n\nimport {\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarToggler,\n  CHeaderBrand,\n  CImage,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport { cilTrash } from \"@coreui/icons\";\n\nimport { AppSidebarNav } from \"./AppSidebarNav\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\n\n// sidebar nav config\nimport navigation from \"../_nav\";\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch();\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable);\n  const sidebarShow = useSelector((state) => state.sidebarShow);\n  const navigate = useNavigate();\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: [\"Droid Sans\", \"Droid Serif\"],\n      },\n    });\n  }, []);\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: \"set\", sidebarShow: visible });\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex p-2\" to=\"/\">\n        <CImage\n          fluid\n          width={80}\n          height={80}\n          src={require(\"../assets/images/logo-1.png\")}\n        ></CImage>\n        {/* <CIcon className=\"sidebar-brand-full\" icon={cilTrash} size=\"3xl\" /> */}\n        <CHeaderBrand\n          style={{ fontFamily: \"Droid Sans\" }}\n          className=\"p-3 fs-2 font-weight-bold\"\n          onClick={() => navigate(\"/home\")}\n        >\n          UWC 2.0\n        </CHeaderBrand>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() =>\n          dispatch({ type: \"set\", sidebarUnfoldable: !unfoldable })\n        }\n      />\n    </CSidebar>\n  );\n};\n\nexport default React.memo(AppSidebar);\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar/>\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Dashboard","React","Vehicle","ListEmployee","MCP","Calendar","path","exact","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","navigate","useNavigate","className","onClick","map","breadcrumb","href","key","AppContent","lg","Suspense","fallback","color","idx","AppFooter","target","rel","variant","placement","caret","src","avatar8","size","icon","cilBell","cilEnvelopeOpen","cilTask","cilCommentSquare","cilUser","cilSettings","cilLockLocked","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","type","cilMenu","AppSidebarNav","items","navLink","badge","text","navItem","item","component","rest","Component","to","NavLink","navGroup","String","toggler","visible","startsWith","CNavItem","cilMap","customClassName","CNavTitle","cilCalendar","CNavGroup","cilInfo","cilPeople","cilTruck","cilCart","cilChatBubble","AppSidebar","unfoldable","sidebarUnfoldable","useEffect","WebFont","google","families","onVisibleChange","width","height","require","style","fontFamily","navigation"],"sourceRoot":""}